version: '3.8'

services:
  jetson-sdk:
    build: .
    container_name: jetson-orin-sdk
    restart: unless-stopped
    volumes:
      # Mount output directories for data persistence
      - ./output:/app/output
      - ./test_output:/app/test_output
      - ./sample_output:/app/sample_output
      # Mount logs for debugging
      - ./logs:/app/logs
      # Mount device files for hardware access
      - /dev/video0:/dev/video0:rw
      - /dev/video1:/dev/video1:rw
      - /dev/video2:/dev/video2:rw
      - /dev/ttyUSB0:/dev/ttyUSB0:rw
      - /dev/ttyUSB1:/dev/ttyUSB1:rw
      - /dev/ttyUSB2:/dev/ttyUSB2:rw
      - /dev/ttyACM0:/dev/ttyACM0:rw
      - /dev/ttyACM1:/dev/ttyACM1:rw
      - /dev/ttyACM2:/dev/ttyACM2:rw
      - /dev/ttyS0:/dev/ttyS0:rw
      - /dev/ttyS1:/dev/ttyS1:rw
      - /dev/ttyS2:/dev/ttyS2:rw
    devices:
      # Grant access to camera and serial devices
      - /dev/video0
      - /dev/video1
      - /dev/video2
      - /dev/ttyUSB0
      - /dev/ttyUSB1
      - /dev/ttyUSB2
      - /dev/ttyACM0
      - /dev/ttyACM1
      - /dev/ttyACM2
      - /dev/ttyS0
      - /dev/ttyS1
      - /dev/ttyS2
    environment:
      - DISPLAY=${DISPLAY}
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    network_mode: host
    privileged: true
    command: ["python3", "main.py"]

  # Optional: Web interface service
  jetson-sdk-web:
    build: .
    container_name: jetson-orin-sdk-web
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./output:/app/output
      - ./logs:/app/logs
      - /dev/video0:/dev/video0:rw
      - /dev/ttyUSB0:/dev/ttyUSB0:rw
    devices:
      - /dev/video0
      - /dev/ttyUSB0
    environment:
      - DISPLAY=${DISPLAY}
    network_mode: host
    privileged: true
    command: ["python3", "-c", "from main import JetsonOrinSDK; sdk = JetsonOrinSDK(); sdk.run_web_server()"]
    profiles:
      - web

  # Development service with volume mounting for live code changes
  jetson-sdk-dev:
    build: .
    container_name: jetson-orin-sdk-dev
    restart: unless-stopped
    volumes:
      # Mount source code for development
      - .:/app
      - ./output:/app/output
      - ./logs:/app/logs
      # Mount device files
      - /dev/video0:/dev/video0:rw
      - /dev/ttyUSB0:/dev/ttyUSB0:rw
    devices:
      - /dev/video0
      - /dev/ttyUSB0
    environment:
      - DISPLAY=${DISPLAY}
    network_mode: host
    privileged: true
    command: ["python3", "test_sdk.py"]
    profiles:
      - dev

networks:
  default:
    driver: bridge